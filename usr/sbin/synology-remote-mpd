#!/usr/bin/env python
"""Simple event device listener"""

import time
import subprocess

from evdev import Device

# Device to process
DEVICE = '/dev/input/event1'

# Stream URLs

ONE_URL = 'http://icecast2.play.cz/radiobeat128.mp3'
TWO_URL = 'http://icecast5.play.cz/rockzone128.mp3'
THREE_URL = 'http://ice.abradio.cz:8000/city80128.mp3'
FOUR_URL = 'http://ice.abradio.cz:8000/city90128.mp3'


class KeyboardHandler(object):
    def main(self):
        dev = Device(DEVICE)
        for event in dev.loop():
            if event.type == 'EV_KEY':
                # 0 - release, 1 - press, 2 - repeat
                if event.value == 0:
                    # key release
                    continue
                if hasattr(self, event.code):
                    getattr(self, event.code)(event)
                else:
                    print event.code


class SynologyHandler(KeyboardHandler):
    def mpc(self, *args):
        print 'mpc', repr(args)
        subprocess.call(['mpc'] + args)

    def clear(self):
        self.mpc('clear')

    def play_stream(self, url):
        self.clear()
        self.mpc('add', url)

    def KEY_KP9(self, event):
        self.play_stream(ONE_URL)

    def KEY_KP0(self, event):
        self.play_stream(TWO_URL)

    def KEY_KPDOT(self, event):
        self.play_stream(THREE_URL)

    def KEY_102ND(self, event):
        self.play_stream(FOUR_URL)


if __name__ == "__main__":
    SynologyHandler().main()
